{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2024-10-27T18:30:07.558948Z", "invocation_id": "1006b1f0-c731-45be-8b39-b3e7d6c86770", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-27T18:30:01.215756Z", "completed_at": "2024-10-27T18:30:01.243758Z"}, {"name": "execute", "started_at": "2024-10-27T18:30:01.245759Z", "completed_at": "2024-10-27T18:30:01.999755Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.786998987197876, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west9", "project_id": "dataengineerproject-439609", "job_id": "5e31cf42-2f8c-4d87-8a3b-bd07f93b8506", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.dbt_data_pipeline.customers_staging", "compiled": true, "compiled_code": "-- Tag pour indiquer que ce mod\u00e8le est mis \u00e0 jour toutes les heures\n\n\nWITH standardized_customers AS (\n    SELECT\n        *,\n        -- Normalisation des num\u00e9ros de t\u00e9l\u00e9phone\n        ARRAY(\n            SELECT\n                CASE\n                    WHEN REGEXP_CONTAINS(phone_number, r'^\\+33') THEN phone_number\n                    WHEN REGEXP_CONTAINS(phone_number, r'^0') THEN '+33' || SUBSTR(REGEXP_REPLACE(phone_number, r'\\D', ''), 2)  -- Remplacer 0 par +33\n                    ELSE phone_number  -- Pour tout autre format, garder tel quel (potentiellement \u00e0 adapter pour d'autres cas)\n                END AS standardized_phone_number\n            FROM UNNEST(phone_numbers) AS phone_number\n        ) AS standardized_phone_numbers,\n\n        -- Normalisation des adresses e-mail (en minuscules pour consistance)\n        ARRAY(\n            SELECT LOWER(email)\n            FROM UNNEST(emails) AS email\n        ) AS standardized_emails\n    FROM `dataengineerproject-439609`.`dp_lake`.`customers_normalized`\n),\n\nranked_customers AS (\n    SELECT\n        *,\n        ROW_NUMBER() OVER (\n            PARTITION BY customer_id\n            ORDER BY _dp_ingestion_timestamp DESC\n        ) AS row_num\n    FROM standardized_customers\n)\n\n-- S\u00e9lectionner uniquement les enregistrements uniques les plus r\u00e9cents\nSELECT\n    _dp_ingestion_timestamp,\n    customer_id,\n    standardized_emails AS emails,\n    standardized_phone_numbers AS phone_numbers\n\nFROM\n    ranked_customers\nWHERE\n    row_num = 1", "relation_name": "`dataengineerproject-439609`.`dp_hub`.`customers_staging`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-27T18:30:02.023756Z", "completed_at": "2024-10-27T18:30:02.038757Z"}, {"name": "execute", "started_at": "2024-10-27T18:30:02.040757Z", "completed_at": "2024-10-27T18:30:02.435757Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4190027713775635, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west9", "project_id": "dataengineerproject-439609", "job_id": "24fd4c51-2077-4bf1-bba5-fa9d763f3694", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.dbt_data_pipeline.products_staging", "compiled": true, "compiled_code": "-- Tag pour indiquer que ce mod\u00e8le est mis \u00e0 jour toutes les heures\n\n\nWITH ranked_products AS (\n    SELECT\n        *,\n        ROW_NUMBER() OVER (\n            PARTITION BY product_sku\n            ORDER BY _dp_ingestion_timestamp DESC\n        ) AS row_num\n    FROM `dataengineerproject-439609`.`dp_lake`.`products_normalized`\n)\n\n-- S\u00e9lectionner uniquement les enregistrements uniques les plus r\u00e9cents\nSELECT\n    _dp_ingestion_timestamp,\n    product_sku,\n    unit_amount,\n    description AS product_description,\n    supplier\n\nFROM\n    ranked_products\nWHERE\n    row_num = 1", "relation_name": "`dataengineerproject-439609`.`dp_hub`.`products_staging`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-27T18:30:02.467781Z", "completed_at": "2024-10-27T18:30:02.480757Z"}, {"name": "execute", "started_at": "2024-10-27T18:30:02.483760Z", "completed_at": "2024-10-27T18:30:02.996756Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5329997539520264, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west9", "project_id": "dataengineerproject-439609", "job_id": "aff1d91b-c087-45b0-9cce-b5b770cd1da2", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.dbt_data_pipeline.sales_staging", "compiled": true, "compiled_code": "-- Tag to indicate that this model is updated every hour\n\n\nWITH ranked_sales AS (\n    -- Assign a row number to each sale based on customer_id and timestamp, to keep the most recent entry\n    SELECT\n        *,\n        ROW_NUMBER() OVER (\n            PARTITION BY id\n            ORDER BY _dp_ingestion_timestamp DESC\n        ) AS row_num\n    FROM `dataengineerproject-439609`.`dp_lake`.`sales_normalized`\n),\n\n-- Filter to only include the most recent entry for each sale (i.e., row_num = 1)\ndeduplicated_sales AS (\n    SELECT *\n    FROM ranked_sales\n    WHERE row_num = 1\n)\n\n-- Flatten items array for each sale and select relevant fields\nSELECT\n    ds._dp_ingestion_timestamp,\n    ds.id,\n    ds.datetime AS sales_datetime,\n    ds.customer_id,\n    ds.total_amount,\n    item.amount AS item_amount,\n    item.quantity AS item_quantity,\n    item.product_sku AS item_product_sku\nFROM\n    deduplicated_sales AS ds,\n    UNNEST(ds.items) AS item", "relation_name": "`dataengineerproject-439609`.`dp_hub`.`sales_staging`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-10-27T18:30:03.060758Z", "completed_at": "2024-10-27T18:30:03.174756Z"}, {"name": "execute", "started_at": "2024-10-27T18:30:03.177755Z", "completed_at": "2024-10-27T18:30:07.544949Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 4.5001935958862305, "adapter_response": {"_message": "MERGE (2.0 rows, 3.2 KiB processed)", "code": "MERGE", "rows_affected": 2, "bytes_processed": 3290, "bytes_billed": 31457280, "location": "europe-west9", "project_id": "dataengineerproject-439609", "job_id": "2f30a800-6dbf-4ea6-8805-35c09cc866ee", "slot_ms": 6027}, "message": "MERGE (2.0 rows, 3.2 KiB processed)", "failures": null, "unique_id": "model.dbt_data_pipeline.sales_items", "compiled": true, "compiled_code": "-- Config pour indiquer le mod\u00e8le incr\u00e9mental\n\n\n-- Extraction des informations n\u00e9cessaires pour chaque vente et chaque produit\n    SELECT\n        CONCAT(CAST(s.id AS STRING), '_', s.item_product_sku) AS pk,  -- Cl\u00e9 primaire unique pour chaque vente\n        safe_cast(s.sales_datetime AS datetime) AS sales_datetime,  -- Date de la vente\n        s.item_amount,  -- Montant total par produit et par vente\n        s.item_product_sku AS product_sku,  -- SKU du produit vendu\n        s.item_quantity,  -- Quantit\u00e9 d'items vendus\n        p.product_description,  -- Description du produit\n        ((p.unit_amount - s.item_amount) / p.unit_amount) * 100 AS discount_perc  -- Pourcentage de r\u00e9duction\n    FROM `dataengineerproject-439609`.`dp_hub`.`sales_staging` AS s\n    LEFT JOIN `dataengineerproject-439609`.`dp_hub`.`products_staging` AS p\n    ON s.item_product_sku = p.product_sku  -- Associer la description des produits", "relation_name": "`dataengineerproject-439609`.`dp_dataproducts`.`sales_items`"}], "elapsed_time": 10.825193643569946, "args": {"which": "run", "print": true, "version_check": true, "quiet": false, "project_dir": "C:\\Users\\lenovo\\data-engineer-project", "require_explicit_package_overrides_for_builtin_materializations": true, "populate_cache": true, "favor_state": false, "defer": false, "enable_legacy_logger": false, "source_freshness_run_project_hooks": false, "use_colors_file": true, "use_colors": true, "log_format_file": "debug", "select": [], "log_level_file": "debug", "partial_parse": true, "warn_error_options": {"include": [], "exclude": []}, "strict_mode": false, "profiles_dir": "C:/Users/lenovo/.dbt", "write_json": true, "show_resource_report": false, "log_path": "C:\\Users\\lenovo\\data-engineer-project\\logs", "cache_selected_only": false, "introspect": true, "invocation_command": "dbt run --profiles-dir C:/Users/lenovo/.dbt", "empty": false, "printer_width": 80, "require_resource_names_without_spaces": false, "log_file_max_bytes": 10485760, "static_parser": true, "macro_debugging": false, "partial_parse_file_diff": true, "exclude": [], "send_anonymous_usage_stats": true, "log_level": "info", "log_format": "default", "indirect_selection": "eager", "vars": {}}}